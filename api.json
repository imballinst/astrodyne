{
	"id": 0,
	"name": "astrodyne",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "components/TestComponent",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 30,
					"name": "<internal>",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 54,
							"name": "Component",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 56,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 481,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 57,
											"name": "new Component",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 59,
													"name": "P",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 58,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 61,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 60,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 62,
													"name": "SS",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"parameters": [
												{
													"id": 63,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 59,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															},
															{
																"type": "reference",
																"id": 201,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 59,
																		"qualifiedName": "React.Component.P",
																		"package": "@types/react",
																		"name": "P"
																	}
																],
																"qualifiedName": "Readonly",
																"package": "typescript",
																"name": "Readonly"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 54,
												"typeArguments": [
													{
														"type": "reference",
														"id": 59,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													},
													{
														"type": "reference",
														"id": 61,
														"qualifiedName": "React.Component.S",
														"package": "@types/react",
														"name": "S"
													},
													{
														"type": "reference",
														"id": 62,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												],
												"qualifiedName": "React.Component",
												"package": "@types/react",
												"name": "Component"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ComponentLifecycle<P, S, SS>.constructor"
											}
										},
										{
											"id": 64,
											"name": "new Component",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"tags": [
													{
														"tag": "deprecated",
														"text": ""
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/docs/legacy-context.html\n"
													}
												]
											},
											"typeParameter": [
												{
													"id": 66,
													"name": "P",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 65,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 68,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 67,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 69,
													"name": "SS",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"parameters": [
												{
													"id": 70,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 59,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													}
												},
												{
													"id": 71,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 54,
												"typeArguments": [
													{
														"type": "reference",
														"id": 59,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													},
													{
														"type": "reference",
														"id": 61,
														"qualifiedName": "React.Component.S",
														"package": "@types/react",
														"name": "S"
													},
													{
														"type": "reference",
														"id": 62,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												],
												"qualifiedName": "React.Component",
												"package": "@types/react",
												"name": "Component"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ComponentLifecycle<P, S, SS>.constructor"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle<P, S, SS>.constructor"
									}
								},
								{
									"id": 72,
									"name": "context",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\nShould be used with type annotation or static contextType.",
										"text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```\n",
										"tags": [
											{
												"tag": "see",
												"text": "https://reactjs.org/docs/context.html\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 479,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 91,
									"name": "props",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 504,
											"character": 17
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 201,
												"typeArguments": [
													{
														"type": "reference",
														"id": 59,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													}
												],
												"qualifiedName": "Readonly",
												"package": "typescript",
												"name": "Readonly"
											},
											{
												"type": "reference",
												"id": 201,
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 92,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 93,
																	"name": "children",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react/index.d.ts",
																			"line": 504,
																			"character": 49
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 203,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		93
																	]
																}
															]
														}
													}
												],
												"qualifiedName": "Readonly",
												"package": "typescript",
												"name": "Readonly"
											}
										]
									}
								},
								{
									"id": 95,
									"name": "refs",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"tags": [
											{
												"tag": "deprecated",
												"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 510,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 96,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"indexSignature": {
												"id": 97,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {
													"isExternal": true
												},
												"parameters": [
													{
														"id": 98,
														"name": "key",
														"kind": 32768,
														"flags": {
															"isExternal": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"id": 207,
													"qualifiedName": "React.ReactInstance",
													"package": "@types/react",
													"name": "ReactInstance"
												}
											}
										}
									}
								},
								{
									"id": 94,
									"name": "state",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 505,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 201,
										"typeArguments": [
											{
												"type": "reference",
												"id": 61,
												"qualifiedName": "React.Component.S",
												"package": "@types/react",
												"name": "S"
											}
										],
										"qualifiedName": "Readonly",
										"package": "typescript",
										"name": "Readonly"
									}
								},
								{
									"id": 55,
									"name": "contextType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, `this.context` will be set at runtime to the current value of the given Context.",
										"text": "Usage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n",
										"tags": [
											{
												"tag": "see",
												"text": "https://reactjs.org/docs/context.html#classcontexttype\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 461,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 196,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "React.Context",
										"package": "@types/react",
										"name": "Context"
									}
								},
								{
									"id": 123,
									"name": "UNSAFE_componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 124,
											"name": "UNSAFE_componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 174,
												"name": "ComponentLifecycle.UNSAFE_componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 173,
										"name": "ComponentLifecycle.UNSAFE_componentWillMount"
									}
								},
								{
									"id": 129,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 130,
											"name": "UNSAFE_componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 131,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 59,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 132,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 180,
												"name": "ComponentLifecycle.UNSAFE_componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 179,
										"name": "ComponentLifecycle.UNSAFE_componentWillReceiveProps"
									}
								},
								{
									"id": 138,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 139,
											"name": "UNSAFE_componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 140,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 59,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 141,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 61,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 142,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 189,
												"name": "ComponentLifecycle.UNSAFE_componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 188,
										"name": "ComponentLifecycle.UNSAFE_componentWillUpdate"
									}
								},
								{
									"id": 108,
									"name": "componentDidCatch",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 109,
											"name": "componentDidCatch",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
											},
											"parameters": [
												{
													"id": 110,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 208,
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												},
												{
													"id": 111,
													"name": "errorInfo",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 213,
														"qualifiedName": "React.ErrorInfo",
														"package": "@types/react",
														"name": "ErrorInfo"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 159,
												"name": "ComponentLifecycle.componentDidCatch"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 158,
										"name": "ComponentLifecycle.componentDidCatch"
									}
								},
								{
									"id": 99,
									"name": "componentDidMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 100,
											"name": "componentDidMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 150,
												"name": "ComponentLifecycle.componentDidMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 149,
										"name": "ComponentLifecycle.componentDidMount"
									}
								},
								{
									"id": 116,
									"name": "componentDidUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 117,
											"name": "componentDidUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after updating occurs. Not called for the initial render.",
												"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
											},
											"parameters": [
												{
													"id": 118,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 59,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 119,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 61,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 120,
													"name": "snapshot",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 62,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 167,
												"name": "ComponentLifecycle.componentDidUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 166,
										"name": "ComponentLifecycle.componentDidUpdate"
									}
								},
								{
									"id": 121,
									"name": "componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 122,
											"name": "componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 172,
												"name": "ComponentLifecycle.componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 171,
										"name": "ComponentLifecycle.componentWillMount"
									}
								},
								{
									"id": 125,
									"name": "componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 126,
											"name": "componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 127,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 59,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 128,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 176,
												"name": "ComponentLifecycle.componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 175,
										"name": "ComponentLifecycle.componentWillReceiveProps"
									}
								},
								{
									"id": 106,
									"name": "componentWillUnmount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 107,
											"name": "componentWillUnmount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 157,
												"name": "ComponentLifecycle.componentWillUnmount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 156,
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								},
								{
									"id": 133,
									"name": "componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 134,
											"name": "componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 135,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 59,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 136,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 61,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 137,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 184,
												"name": "ComponentLifecycle.componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 183,
										"name": "ComponentLifecycle.componentWillUpdate"
									}
								},
								{
									"id": 84,
									"name": "forceUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 496,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 85,
											"name": "forceUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 86,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 87,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 88,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 112,
									"name": "getSnapshotBeforeUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 113,
											"name": "getSnapshotBeforeUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
												"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
											},
											"parameters": [
												{
													"id": 114,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 59,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 115,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 61,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 62,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 163,
												"name": "ComponentLifecycle.getSnapshotBeforeUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 162,
										"name": "ComponentLifecycle.getSnapshotBeforeUpdate"
									}
								},
								{
									"id": 89,
									"name": "render",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 497,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 90,
											"name": "render",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 203,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											}
										}
									]
								},
								{
									"id": 73,
									"name": "setState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 491,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 74,
											"name": "setState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 75,
													"name": "K",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 76,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 61,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 77,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"signatures": [
																		{
																			"id": 78,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {
																				"isExternal": true
																			},
																			"parameters": [
																				{
																					"id": 79,
																					"name": "prevState",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExternal": true
																					},
																					"type": {
																						"type": "reference",
																						"id": 201,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 61,
																								"qualifiedName": "React.Component.S",
																								"package": "@types/react",
																								"name": "S"
																							}
																						],
																						"qualifiedName": "Readonly",
																						"package": "typescript",
																						"name": "Readonly"
																					}
																				},
																				{
																					"id": 80,
																					"name": "props",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExternal": true
																					},
																					"type": {
																						"type": "reference",
																						"id": 201,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 59,
																								"qualifiedName": "React.Component.P",
																								"package": "@types/react",
																								"name": "P"
																							}
																						],
																						"qualifiedName": "Readonly",
																						"package": "typescript",
																						"name": "Readonly"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "reference",
																						"id": 61,
																						"qualifiedName": "React.Component.S",
																						"package": "@types/react",
																						"name": "S"
																					},
																					{
																						"type": "reference",
																						"id": 204,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 61,
																								"qualifiedName": "React.Component.S",
																								"package": "@types/react",
																								"name": "S"
																							},
																							{
																								"type": "reference",
																								"id": 75,
																								"qualifiedName": "K",
																								"package": "@types/react",
																								"name": "K"
																							}
																						],
																						"qualifiedName": "Pick",
																						"package": "typescript",
																						"name": "Pick"
																					}
																				]
																			}
																		}
																	]
																}
															},
															{
																"type": "reference",
																"id": 204,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 61,
																		"qualifiedName": "React.Component.S",
																		"package": "@types/react",
																		"name": "S"
																	},
																	{
																		"type": "reference",
																		"id": 75,
																		"qualifiedName": "K",
																		"package": "@types/react",
																		"name": "K"
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														]
													}
												},
												{
													"id": 81,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 82,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 83,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 101,
									"name": "shouldComponentUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 102,
											"name": "shouldComponentUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
												"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
											},
											"parameters": [
												{
													"id": 103,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 59,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 104,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 61,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 105,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 152,
												"name": "ComponentLifecycle.shouldComponentUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 151,
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										56
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										72,
										91,
										95,
										94,
										55
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										123,
										129,
										138,
										108,
										99,
										116,
										121,
										125,
										106,
										133,
										84,
										112,
										89,
										73,
										101
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 439,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 144,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 143,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 438,
													"character": 28
												}
											]
										}
									}
								},
								{
									"id": 146,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 145,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 438,
													"character": 36
												}
											]
										}
									}
								},
								{
									"id": 147,
									"name": "SS",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 148,
									"typeArguments": [
										{
											"type": "reference",
											"id": 59,
											"qualifiedName": "React.Component.P",
											"package": "@types/react",
											"name": "P"
										},
										{
											"type": "reference",
											"id": 61,
											"qualifiedName": "React.Component.S",
											"package": "@types/react",
											"name": "S"
										},
										{
											"type": "reference",
											"id": 62,
											"qualifiedName": "React.Component.SS",
											"package": "@types/react",
											"name": "SS"
										}
									],
									"qualifiedName": "React.ComponentLifecycle",
									"package": "@types/react",
									"name": "ComponentLifecycle"
								}
							]
						},
						{
							"id": 148,
							"name": "ComponentLifecycle",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 173,
									"name": "UNSAFE_componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 174,
											"name": "UNSAFE_componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 232,
												"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 231,
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								},
								{
									"id": 179,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 180,
											"name": "UNSAFE_componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 181,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 193,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 182,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 238,
												"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 237,
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								},
								{
									"id": 188,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 189,
											"name": "UNSAFE_componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 190,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 193,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 191,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 194,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 192,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 247,
												"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 246,
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								},
								{
									"id": 158,
									"name": "componentDidCatch",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 159,
											"name": "componentDidCatch",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
											},
											"parameters": [
												{
													"id": 160,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 208,
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												},
												{
													"id": 161,
													"name": "errorInfo",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 213,
														"qualifiedName": "React.ErrorInfo",
														"package": "@types/react",
														"name": "ErrorInfo"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 149,
									"name": "componentDidMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 150,
											"name": "componentDidMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 166,
									"name": "componentDidUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 167,
											"name": "componentDidUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after updating occurs. Not called for the initial render.",
												"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
											},
											"parameters": [
												{
													"id": 168,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 193,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 169,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 194,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 170,
													"name": "snapshot",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 195,
														"qualifiedName": "React.ComponentLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 221,
												"name": "NewLifecycle.componentDidUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 220,
										"name": "NewLifecycle.componentDidUpdate"
									}
								},
								{
									"id": 171,
									"name": "componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 172,
											"name": "componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 230,
												"name": "DeprecatedLifecycle.componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 229,
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								},
								{
									"id": 175,
									"name": "componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 176,
											"name": "componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 177,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 193,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 178,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 234,
												"name": "DeprecatedLifecycle.componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 233,
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								},
								{
									"id": 156,
									"name": "componentWillUnmount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 157,
											"name": "componentWillUnmount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 183,
									"name": "componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 184,
											"name": "componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 185,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 193,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 186,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 194,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 187,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 242,
												"name": "DeprecatedLifecycle.componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 241,
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								},
								{
									"id": 162,
									"name": "getSnapshotBeforeUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 163,
											"name": "getSnapshotBeforeUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
												"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
											},
											"parameters": [
												{
													"id": 164,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 193,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 165,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 194,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 195,
														"qualifiedName": "React.ComponentLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 217,
												"name": "NewLifecycle.getSnapshotBeforeUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 216,
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								},
								{
									"id": 151,
									"name": "shouldComponentUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 152,
											"name": "shouldComponentUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
												"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
											},
											"parameters": [
												{
													"id": 153,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 193,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 154,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 194,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 155,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										173,
										179,
										188,
										158,
										149,
										166,
										171,
										175,
										156,
										183,
										162,
										151
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 621,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 193,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 194,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 195,
									"name": "SS",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 215,
									"typeArguments": [
										{
											"type": "reference",
											"id": 193,
											"qualifiedName": "React.ComponentLifecycle.P",
											"package": "@types/react",
											"name": "P"
										},
										{
											"type": "reference",
											"id": 194,
											"qualifiedName": "React.ComponentLifecycle.S",
											"package": "@types/react",
											"name": "S"
										},
										{
											"type": "reference",
											"id": 195,
											"qualifiedName": "React.ComponentLifecycle.SS",
											"package": "@types/react",
											"name": "SS"
										}
									],
									"qualifiedName": "React.NewLifecycle",
									"package": "@types/react",
									"name": "NewLifecycle"
								},
								{
									"type": "reference",
									"id": 228,
									"typeArguments": [
										{
											"type": "reference",
											"id": 193,
											"qualifiedName": "React.ComponentLifecycle.P",
											"package": "@types/react",
											"name": "P"
										},
										{
											"type": "reference",
											"id": 194,
											"qualifiedName": "React.ComponentLifecycle.S",
											"package": "@types/react",
											"name": "S"
										}
									],
									"qualifiedName": "React.DeprecatedLifecycle",
									"package": "@types/react",
									"name": "DeprecatedLifecycle"
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 54,
									"name": "Component"
								}
							]
						},
						{
							"id": 286,
							"name": "ConsumerProps",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 287,
									"name": "children",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 343,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 288,
											"name": "children",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 289,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 290,
														"qualifiedName": "React.ConsumerProps.T",
														"package": "@types/react",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 203,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										287
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 342,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 290,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 196,
							"name": "Context",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 198,
									"name": "Consumer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 380,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 263,
										"typeArguments": [
											{
												"type": "reference",
												"id": 200,
												"qualifiedName": "React.Context.T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.Consumer",
										"package": "@types/react",
										"name": "Consumer"
									}
								},
								{
									"id": 197,
									"name": "Provider",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 379,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"id": 200,
												"qualifiedName": "React.Context.T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.Provider",
										"package": "@types/react",
										"name": "Provider"
									}
								},
								{
									"id": 199,
									"name": "displayName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 381,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										198,
										197,
										199
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 378,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 200,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 228,
							"name": "DeprecatedLifecycle",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 231,
									"name": "UNSAFE_componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 232,
											"name": "UNSAFE_componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 237,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 238,
											"name": "UNSAFE_componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 239,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 251,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 240,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 246,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 247,
											"name": "UNSAFE_componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 248,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 251,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 249,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 252,
																"qualifiedName": "React.DeprecatedLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 250,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 229,
									"name": "componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 230,
											"name": "componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 233,
									"name": "componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 234,
											"name": "componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 235,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 251,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 236,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 241,
									"name": "componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 242,
											"name": "componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 243,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 251,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 244,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 252,
																"qualifiedName": "React.DeprecatedLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 245,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										231,
										237,
										246,
										229,
										233,
										241
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 691,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 251,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 252,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 148,
									"name": "ComponentLifecycle"
								}
							]
						},
						{
							"id": 31,
							"name": "Element",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 34,
									"name": "key",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 149,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 45,
												"qualifiedName": "React.Key",
												"package": "@types/react",
												"name": "Key"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 42,
										"name": "ReactElement.key"
									}
								},
								{
									"id": 33,
									"name": "props",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 148,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 41,
										"name": "ReactElement.props"
									}
								},
								{
									"id": 32,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 147,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 40,
										"name": "ReactElement.type"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										34,
										33,
										32
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 3091,
									"character": 18
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 39,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"qualifiedName": "React.ReactElement",
									"package": "@types/react",
									"name": "ReactElement"
								}
							]
						},
						{
							"id": 209,
							"name": "Error",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 211,
									"name": "message",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1023,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 210,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1022,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 212,
									"name": "stack",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1024,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										211,
										210,
										212
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1021,
									"character": 10
								}
							]
						},
						{
							"id": 213,
							"name": "ErrorInfo",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 214,
									"name": "componentStack",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Captures which component contained the exception, and its ancestors."
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 3043,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										214
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 3039,
									"character": 14
								}
							]
						},
						{
							"id": 280,
							"name": "ExoticComponent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 281,
									"name": "$$typeof",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 361,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										281
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 356,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 283,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 282,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 356,
													"character": 34
												}
											]
										}
									}
								}
							],
							"signatures": [
								{
									"id": 284,
									"name": "ExoticComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "**NOTE**: Exotic components are not callable."
									},
									"parameters": [
										{
											"id": 285,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 283,
												"qualifiedName": "React.ExoticComponent.P",
												"package": "@types/react",
												"name": "P"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 39,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 46,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"qualifiedName": "React.JSXElementConstructor",
																"package": "@types/react",
																"name": "JSXElementConstructor"
															}
														]
													}
												],
												"qualifiedName": "React.ReactElement",
												"package": "@types/react",
												"name": "ReactElement"
											}
										]
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 270,
									"name": "ProviderExoticComponent"
								}
							]
						},
						{
							"id": 266,
							"name": "Iterable",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 267,
									"name": "[iterator]",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 268,
											"name": "[iterator]",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 293,
												"typeArguments": [
													{
														"type": "reference",
														"id": 269,
														"qualifiedName": "Iterable.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												],
												"qualifiedName": "Iterator",
												"package": "typescript",
												"name": "Iterator"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										267
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 50,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 269,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 293,
							"name": "Iterator",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 294,
									"name": "next",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 295,
											"name": "next",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 296,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "tuple"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 305,
																		"qualifiedName": "Iterator.TNext",
																		"package": "typescript",
																		"name": "TNext"
																	}
																]
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 308,
												"typeArguments": [
													{
														"type": "reference",
														"id": 303,
														"qualifiedName": "Iterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 304,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											}
										}
									]
								},
								{
									"id": 297,
									"name": "return",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 298,
											"name": "return",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 299,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 304,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 308,
												"typeArguments": [
													{
														"type": "reference",
														"id": 303,
														"qualifiedName": "Iterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 304,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											}
										}
									]
								},
								{
									"id": 300,
									"name": "throw",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 301,
											"name": "throw",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 302,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 308,
												"typeArguments": [
													{
														"type": "reference",
														"id": 303,
														"qualifiedName": "Iterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 304,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										294,
										297,
										300
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 43,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 303,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 304,
									"name": "TReturn",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 305,
									"name": "TNext",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							]
						},
						{
							"id": 329,
							"name": "IteratorReturnResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 330,
									"name": "done",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 37,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": true
									}
								},
								{
									"id": 331,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 38,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 332,
										"qualifiedName": "IteratorReturnResult.TReturn",
										"package": "typescript",
										"name": "TReturn"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										330,
										331
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 36,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 332,
									"name": "TReturn",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 325,
							"name": "IteratorYieldResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 326,
									"name": "done",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 32,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 327,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 33,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 328,
										"qualifiedName": "IteratorYieldResult.TYield",
										"package": "typescript",
										"name": "TYield"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										326,
										327
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 31,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 328,
									"name": "TYield",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 215,
							"name": "NewLifecycle",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 220,
									"name": "componentDidUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 221,
											"name": "componentDidUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after updating occurs. Not called for the initial render.",
												"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
											},
											"parameters": [
												{
													"id": 222,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 225,
																"qualifiedName": "React.NewLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 223,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 226,
																"qualifiedName": "React.NewLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 224,
													"name": "snapshot",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 227,
														"qualifiedName": "React.NewLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 216,
									"name": "getSnapshotBeforeUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 217,
											"name": "getSnapshotBeforeUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
												"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
											},
											"parameters": [
												{
													"id": 218,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 225,
																"qualifiedName": "React.NewLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 219,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 226,
																"qualifiedName": "React.NewLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 227,
														"qualifiedName": "React.NewLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										220,
										216
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 673,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 225,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 226,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 227,
									"name": "SS",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 148,
									"name": "ComponentLifecycle"
								}
							]
						},
						{
							"id": 270,
							"name": "ProviderExoticComponent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 272,
									"name": "$$typeof",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 361,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 281,
										"name": "ExoticComponent.$$typeof"
									}
								},
								{
									"id": 271,
									"name": "propTypes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 369,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 291,
										"typeArguments": [
											{
												"type": "reference",
												"id": 273,
												"qualifiedName": "React.ProviderExoticComponent.P",
												"package": "@types/react",
												"name": "P"
											}
										],
										"qualifiedName": "React.WeakValidationMap",
										"package": "@types/react",
										"name": "WeakValidationMap"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										272,
										271
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 368,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 273,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"signatures": [
								{
									"id": 274,
									"name": "ProviderExoticComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "**NOTE**: Exotic components are not callable."
									},
									"parameters": [
										{
											"id": 275,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 273,
												"qualifiedName": "React.ProviderExoticComponent.P",
												"package": "@types/react",
												"name": "P"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 39,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 46,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"qualifiedName": "React.JSXElementConstructor",
																"package": "@types/react",
																"name": "JSXElementConstructor"
															}
														]
													}
												],
												"qualifiedName": "React.ReactElement",
												"package": "@types/react",
												"name": "ReactElement"
											}
										]
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 280,
									"typeArguments": [
										{
											"type": "reference",
											"id": 273,
											"qualifiedName": "React.ProviderExoticComponent.P",
											"package": "@types/react",
											"name": "P"
										}
									],
									"qualifiedName": "React.ExoticComponent",
									"package": "@types/react",
									"name": "ExoticComponent"
								}
							]
						},
						{
							"id": 276,
							"name": "ProviderProps",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 278,
									"name": "children",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 339,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 203,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								},
								{
									"id": 277,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 338,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 279,
										"qualifiedName": "React.ProviderProps.T",
										"package": "@types/react",
										"name": "T"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										278,
										277
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 337,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 279,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 39,
							"name": "ReactElement",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 42,
									"name": "key",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 149,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 45,
												"qualifiedName": "React.Key",
												"package": "@types/react",
												"name": "Key"
											}
										]
									}
								},
								{
									"id": 41,
									"name": "props",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 148,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 43,
										"qualifiedName": "React.ReactElement.P",
										"package": "@types/react",
										"name": "P"
									}
								},
								{
									"id": 40,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 147,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 44,
										"qualifiedName": "React.ReactElement.T",
										"package": "@types/react",
										"name": "T"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										42,
										41,
										40
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 146,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 43,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 44,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 46,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react",
												"name": "JSXElementConstructor"
											}
										]
									},
									"default": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 46,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react",
												"name": "JSXElementConstructor"
											}
										]
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 31,
									"name": "Element"
								},
								{
									"type": "reference",
									"id": 256,
									"name": "ReactPortal"
								}
							]
						},
						{
							"id": 256,
							"name": "ReactPortal",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 258,
									"name": "children",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 192,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 203,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								},
								{
									"id": 257,
									"name": "key",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 191,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 45,
												"qualifiedName": "React.Key",
												"package": "@types/react",
												"name": "Key"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 42,
										"name": "ReactElement.key"
									}
								},
								{
									"id": 260,
									"name": "props",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 148,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 41,
										"name": "ReactElement.props"
									}
								},
								{
									"id": 259,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 147,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 46,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react",
												"name": "JSXElementConstructor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 40,
										"name": "ReactElement.type"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										258,
										257,
										260,
										259
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 190,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 39,
									"qualifiedName": "React.ReactElement",
									"package": "@types/react",
									"name": "ReactElement"
								}
							]
						},
						{
							"id": 35,
							"name": "TestComponentProps",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"shortText": "The props passed to TestComponent."
							},
							"children": [
								{
									"id": 38,
									"name": "information",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "deprecated",
												"text": "Deprecated since 1.11.1. Please use `metadata` field instead as this might be\nremoved in the future.\n\nThe component information.\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/components/TestComponent.tsx",
											"line": 17,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "Metadata"
									}
								},
								{
									"id": 37,
									"name": "metadata",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The metadata of the component."
									},
									"sources": [
										{
											"fileName": "src/components/TestComponent.tsx",
											"line": 10,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"id": 16,
										"name": "Metadata"
									}
								},
								{
									"id": 36,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The title of the component. This is NOT the component ID."
									},
									"sources": [
										{
											"fileName": "src/components/TestComponent.tsx",
											"line": 8,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										38,
										37,
										36
									]
								}
							],
							"sources": [
								{
									"fileName": "src/components/TestComponent.tsx",
									"line": 6,
									"character": 10
								}
							]
						},
						{
							"id": 311,
							"name": "Validator",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 312,
									"name": "[nominalTypeHack]",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/prop-types/index.d.ts",
											"line": 42,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 313,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 314,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/prop-types/index.d.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 315,
														"qualifiedName": "Validator.T",
														"package": "@types/prop-types",
														"name": "T"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														314
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										312
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/prop-types/index.d.ts",
									"line": 40,
									"character": 17
								}
							],
							"typeParameter": [
								{
									"id": 315,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"signatures": [
								{
									"id": 316,
									"name": "Validator",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 317,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 318,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"indexSignature": {
														"id": 319,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {
															"isExternal": true
														},
														"parameters": [
															{
																"id": 320,
																"name": "key",
																"kind": 32768,
																"flags": {
																	"isExternal": true
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 321,
											"name": "propName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 322,
											"name": "componentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 323,
											"name": "location",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 324,
											"name": "propFullName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 208,
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										]
									}
								}
							]
						},
						{
							"id": 263,
							"name": "Consumer",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 377,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 264,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 280,
								"typeArguments": [
									{
										"type": "reference",
										"id": 286,
										"typeArguments": [
											{
												"type": "reference",
												"id": 264,
												"qualifiedName": "T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.ConsumerProps",
										"package": "@types/react",
										"name": "ConsumerProps"
									}
								],
								"qualifiedName": "React.ExoticComponent",
								"package": "@types/react",
								"name": "ExoticComponent"
							}
						},
						{
							"id": 308,
							"name": "IteratorResult",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 41,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 309,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 310,
									"name": "TReturn",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 325,
										"typeArguments": [
											{
												"type": "reference",
												"id": 309,
												"qualifiedName": "T",
												"package": "typescript",
												"name": "T"
											}
										],
										"qualifiedName": "IteratorYieldResult",
										"package": "typescript",
										"name": "IteratorYieldResult"
									},
									{
										"type": "reference",
										"id": 329,
										"typeArguments": [
											{
												"type": "reference",
												"id": 310,
												"qualifiedName": "TReturn",
												"package": "typescript",
												"name": "TReturn"
											}
										],
										"qualifiedName": "IteratorReturnResult",
										"package": "typescript",
										"name": "IteratorReturnResult"
									}
								]
							}
						},
						{
							"id": 46,
							"name": "JSXElementConstructor",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 84,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 53,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 47,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 85,
													"character": 11
												}
											],
											"signatures": [
												{
													"id": 48,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 49,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 53,
																"qualifiedName": "P",
																"package": "@types/react",
																"name": "P"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 39,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"qualifiedName": "React.ReactElement",
																"package": "@types/react",
																"name": "ReactElement"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 50,
											"name": "__type",
											"kind": 512,
											"kindString": "Constructor",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 86,
													"character": 11
												}
											],
											"signatures": [
												{
													"id": 51,
													"name": "__type",
													"kind": 16384,
													"kindString": "Constructor signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 52,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 53,
																"qualifiedName": "P",
																"package": "@types/react",
																"name": "P"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 54,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "React.Component",
														"package": "@types/react",
														"name": "Component"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 45,
							"name": "Key",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 130,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 204,
							"name": "Pick",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "From T, pick a set of properties whose keys are in the union K"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1552,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 205,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 206,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 205,
											"qualifiedName": "T",
											"package": "typescript",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "reference",
									"id": 206,
									"qualifiedName": "K",
									"package": "typescript",
									"name": "K"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"qualifiedName": "P",
										"package": "typescript",
										"name": "P"
									},
									"objectType": {
										"type": "reference",
										"id": 205,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								}
							}
						},
						{
							"id": 261,
							"name": "Provider",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 262,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 270,
								"typeArguments": [
									{
										"type": "reference",
										"id": 276,
										"typeArguments": [
											{
												"type": "reference",
												"id": 262,
												"qualifiedName": "T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.ProviderProps",
										"package": "@types/react",
										"name": "ProviderProps"
									}
								],
								"qualifiedName": "React.ProviderExoticComponent",
								"package": "@types/react",
								"name": "ProviderExoticComponent"
							}
						},
						{
							"id": 253,
							"name": "ReactChild",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 233,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 39,
										"qualifiedName": "React.ReactElement",
										"package": "@types/react",
										"name": "ReactElement"
									},
									{
										"type": "reference",
										"id": 265,
										"qualifiedName": "React.ReactText",
										"package": "@types/react",
										"name": "ReactText"
									}
								]
							}
						},
						{
							"id": 254,
							"name": "ReactFragment",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 239,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 255,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 239,
													"character": 25
												}
											]
										}
									},
									{
										"type": "reference",
										"id": 266,
										"typeArguments": [
											{
												"type": "reference",
												"id": 203,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											}
										],
										"qualifiedName": "Iterable",
										"package": "typescript",
										"name": "Iterable"
									}
								]
							}
						},
						{
							"id": 207,
							"name": "ReactInstance",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 435,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 54,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "React.Component",
										"package": "@types/react",
										"name": "Component"
									},
									{
										"type": "reference",
										"qualifiedName": "Element",
										"package": "typescript",
										"name": "Element"
									}
								]
							}
						},
						{
							"id": 203,
							"name": "ReactNode",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 240,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 253,
										"qualifiedName": "React.ReactChild",
										"package": "@types/react",
										"name": "ReactChild"
									},
									{
										"type": "reference",
										"id": 254,
										"qualifiedName": "React.ReactFragment",
										"package": "@types/react",
										"name": "ReactFragment"
									},
									{
										"type": "reference",
										"id": 256,
										"qualifiedName": "React.ReactPortal",
										"package": "@types/react",
										"name": "ReactPortal"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 265,
							"name": "ReactText",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 232,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 201,
							"name": "Readonly",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Make all properties in T readonly"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1545,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 202,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 202,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"qualifiedName": "P",
										"package": "typescript",
										"name": "P"
									},
									"objectType": {
										"type": "reference",
										"id": 202,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								},
								"readonlyModifier": "+"
							}
						},
						{
							"id": 306,
							"name": "Validator",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 2962,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 307,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 311,
								"typeArguments": [
									{
										"type": "reference",
										"id": 307,
										"qualifiedName": "T",
										"package": "@types/react",
										"name": "T"
									}
								],
								"qualifiedName": "Validator",
								"package": "@types/prop-types",
								"name": "PropTypes.Validator"
							}
						},
						{
							"id": 291,
							"name": "WeakValidationMap",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 2968,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 292,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 292,
										"qualifiedName": "T",
										"package": "@types/react",
										"name": "T"
									}
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "literal",
										"value": null
									},
									"extendsType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"qualifiedName": "K",
											"package": "@types/react",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 292,
											"qualifiedName": "T",
											"package": "@types/react",
											"name": "T"
										}
									},
									"trueType": {
										"type": "reference",
										"id": 306,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"qualifiedName": "K",
															"package": "@types/react",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 292,
															"qualifiedName": "T",
															"package": "@types/react",
															"name": "T"
														}
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										],
										"qualifiedName": "React.Validator",
										"package": "@types/react",
										"name": "Validator"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "undefined"
										},
										"extendsType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"qualifiedName": "K",
												"package": "@types/react",
												"name": "K"
											},
											"objectType": {
												"type": "reference",
												"id": 292,
												"qualifiedName": "T",
												"package": "@types/react",
												"name": "T"
											}
										},
										"trueType": {
											"type": "reference",
											"id": 306,
											"typeArguments": [
												{
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"qualifiedName": "K",
																"package": "@types/react",
																"name": "K"
															},
															"objectType": {
																"type": "reference",
																"id": 292,
																"qualifiedName": "T",
																"package": "@types/react",
																"name": "T"
															}
														},
														{
															"type": "literal",
															"value": null
														},
														{
															"type": "intrinsic",
															"name": "undefined"
														}
													]
												}
											],
											"qualifiedName": "React.Validator",
											"package": "@types/react",
											"name": "Validator"
										},
										"falseType": {
											"type": "reference",
											"id": 306,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"qualifiedName": "K",
														"package": "@types/react",
														"name": "K"
													},
													"objectType": {
														"type": "reference",
														"id": 292,
														"qualifiedName": "T",
														"package": "@types/react",
														"name": "T"
													}
												}
											],
											"qualifiedName": "React.Validator",
											"package": "@types/react",
											"name": "Validator"
										}
									}
								},
								"optionalModifier": "+"
							}
						},
						{
							"id": 208,
							"name": "Error",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1033,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ErrorConstructor",
								"package": "typescript",
								"name": "ErrorConstructor"
							}
						}
					],
					"groups": [
						{
							"title": "Classes",
							"kind": 128,
							"children": [
								54
							]
						},
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								148,
								286,
								196,
								228,
								31,
								209,
								213,
								280,
								266,
								293,
								329,
								325,
								215,
								270,
								276,
								39,
								256,
								35,
								311
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								263,
								308,
								46,
								45,
								204,
								261,
								253,
								254,
								207,
								203,
								265,
								201,
								306,
								291
							]
						},
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								208
							]
						}
					]
				},
				{
					"id": 2,
					"name": "TestComponent",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/TestComponent.tsx",
							"line": 23,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "TestComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Renders a hello world text, the title, as well as the metadata."
							},
							"parameters": [
								{
									"id": 4,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 35,
										"name": "TestComponentProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 31,
								"qualifiedName": "global.JSX.Element",
								"package": "@types/react",
								"name": "Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						30
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/TestComponent.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5,
			"name": "helpers/metadata",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 9,
					"name": "convertToMetadata",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/helpers/metadata.ts",
							"line": 13,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "convertToMetadata",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the information to metadata."
							},
							"parameters": [
								{
									"id": 11,
									"name": "information",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 12,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 13,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/helpers/metadata.ts",
															"line": 14,
															"character": 2
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14,
													"name": "size",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/helpers/metadata.ts",
															"line": 15,
															"character": 2
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														13,
														14
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 16,
								"name": "Metadata"
							}
						}
					]
				},
				{
					"id": 6,
					"name": "getInformation",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/helpers/metadata.ts",
							"line": 6,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 7,
							"name": "getInformation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the component information from the given metadata."
							},
							"parameters": [
								{
									"id": 8,
									"name": "metadata",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 16,
										"name": "Metadata"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "ComponentInfo"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						9,
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "src/helpers/metadata.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 15,
			"name": "helpers/types",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 19,
					"name": "ComponentInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Component info."
					},
					"children": [
						{
							"id": 20,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "This determines the size of the component."
							},
							"sources": [
								{
									"fileName": "src/helpers/types.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 21,
							"name": "sizeArray",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "This determines the size array of the component."
							},
							"sources": [
								{
									"fileName": "src/helpers/types.ts",
									"line": 16,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 22,
							"name": "test",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Sampel test field"
							},
							"sources": [
								{
									"fileName": "src/helpers/types.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "literal",
									"value": "World2"
								}
							}
						},
						{
							"id": 23,
							"name": "test2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Sampel test field"
							},
							"sources": [
								{
									"fileName": "src/helpers/types.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "World2"
										},
										{
											"type": "literal",
											"value": "Hello2"
										}
									]
								}
							}
						},
						{
							"id": 24,
							"name": "test3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Sampel test field"
							},
							"sources": [
								{
									"fileName": "src/helpers/types.ts",
									"line": 22,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 26,
									"name": "World"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								20,
								21,
								22,
								23,
								24
							]
						}
					],
					"sources": [
						{
							"fileName": "src/helpers/types.ts",
							"line": 12,
							"character": 17
						}
					]
				},
				{
					"id": 16,
					"name": "Metadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "The metadata used for the test component."
					},
					"children": [
						{
							"id": 17,
							"name": "componentId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The component ID."
							},
							"sources": [
								{
									"fileName": "src/helpers/types.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18,
							"name": "componentInfo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The component information."
							},
							"sources": [
								{
									"fileName": "src/helpers/types.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "ComponentInfo"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								17,
								18
							]
						}
					],
					"sources": [
						{
							"fileName": "src/helpers/types.ts",
							"line": 4,
							"character": 17
						}
					]
				},
				{
					"id": 25,
					"name": "Hello",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Test normal type assign."
					},
					"sources": [
						{
							"fileName": "src/helpers/types.ts",
							"line": 28,
							"character": 12
						}
					],
					"type": {
						"type": "literal",
						"value": "World2"
					}
				},
				{
					"id": 26,
					"name": "World",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Test normal type assign 2."
					},
					"sources": [
						{
							"fileName": "src/helpers/types.ts",
							"line": 33,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "Hello2"
							},
							{
								"type": "literal",
								"value": "World2"
							}
						]
					}
				},
				{
					"id": 27,
					"name": "XD",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Test normal type object."
					},
					"sources": [
						{
							"fileName": "src/helpers/types.ts",
							"line": 38,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 28,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 29,
									"name": "test",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/types.ts",
											"line": 39,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										29
									]
								}
							],
							"sources": [
								{
									"fileName": "src/helpers/types.ts",
									"line": 38,
									"character": 17
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						19,
						16
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						25,
						26,
						27
					]
				}
			],
			"sources": [
				{
					"fileName": "src/helpers/types.ts",
					"line": 4,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				1,
				5,
				15
			]
		}
	]
}